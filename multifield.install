<?php

/**
 * Implements hook_schema().
 */
function multifield_schema() {
  $schema['multifield'] = array(
    'description' => '',
    'fields' => array(
      'mfid' => array(
        'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 26,
        'default' => '',
        'not null' => TRUE,
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
        'not null' => TRUE,
      ),
      'description' => array(
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'Description of the multifield.',
      ),
      'fields' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
        'description' => 'Serialized data containing the field definitions.',
      ),
    ),
    'primary key' => array('mfid'),
    'unique keys' => array(
      'machine_name' => array('machine_name'),
    ),
    'export' => array(
      'key' => 'machine_name',
      'key name' => 'Machine name',
      'primary key' => 'mfid',
      'identifier' => 'multifield',
      'default hook' => 'multifield_default_multifield',
      'api' => array(
        'owner' => 'multifield',
        'api' => 'multifield',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
      'cache defaults' => TRUE,
      'save callback' => 'multifield_type_save',
      'delete callback' => 'multifield_type_delete',
    ),
  );

  return $schema;
}

function multifield_field_schema($field) {
  $schema = array();

  if ($field['module'] == 'multifield') {
    $instances = field_info_instances('multifield', $field['type']);
    foreach ($instances as $instance) {
      $sub_field = field_info_field($instance['field_name']);
      foreach ($sub_field['columns'] as $key => $column) {
        $schema['columns'][$instance['field_name'] . '_' . $key] = $column;
      }
    }
  }

  return $schema;
}
